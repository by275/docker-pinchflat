name: buildx

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:
  schedule:
    - cron: "45 */6 * * *"

env:
  IMAGE_NAME: ghcr.io/by275/pinchflat

jobs:
  buildx:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      -
        name: Check if buildx required
        run: |
          APP_VER=$(curl -fsSL https://api.github.com/repos/kieraneglin/pinchflat/releases/latest | jq -r .tag_name)
          echo "APP_VER=$APP_VER" >> $GITHUB_ENV
          if [ $GITHUB_EVENT_NAME != "schedule" ]; then
            echo "X_SKIP=false" >> $GITHUB_ENV
            exit 0
          fi
          DOCKER_VER=$(docker run --rm -i --entrypoint=/app/bin/pinchflat ${{ env.IMAGE_NAME }}:latest version | cut -d' ' -f2)
          if [ "$APP_VER" != "v$DOCKER_VER" ]; then echo "X_SKIP=false" >> $GITHUB_ENV ; exit 0 ; fi
          echo "X_SKIP=true" >> $GITHUB_ENV
      -
        name: Checkout
        if: env.X_SKIP == 'false'
        uses: actions/checkout@v5
      -
        name: Set up QEMU
        if: env.X_SKIP == 'false'
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Buildx
        if: env.X_SKIP == 'false'
        uses: docker/setup-buildx-action@v3
      -
        name: Prepare Source
        if: env.X_SKIP == 'false'
        run: |
          git clone -b "${{ env.APP_VER }}" https://github.com/kieraneglin/pinchflat.git src
      -
        name: Login to ghcr.io
        if: env.X_SKIP == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Buildx and Push
        if: env.X_SKIP == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.APP_VER }}
          platforms: linux/amd64,linux/arm64
          push: true
      -
        name: Notification
        uses: sarisia/actions-status-discord@v1
        if: env.X_SKIP == 'false' && always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.APP_VER }}
